name: Execute Tests Based on Excel Tags

on:
  workflow_dispatch:
  push:
    paths:
      - 'tag-priority.xlsx'

permissions:
  contents: write

jobs:
  extract-tags-and-dispatch:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.extract.outputs.matrix }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js & deps
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          npm install xlsx

      - name: Read tags from Excel
        id: extract
        run: |
          node -e "
            const fs = require('fs');
            const xlsx = require('xlsx');
            const workbook = xlsx.readFile('./tag-priority.xlsx');
            const sheet = workbook.Sheets[workbook.SheetNames[0]];
            const data = xlsx.utils.sheet_to_json(sheet, { header: 1 });

            const tags = [];
            for (let i = 1; i < data.length; i++) {
              const cell = (data[i][0] || '').toString().trim();
              if (!cell) continue;
              tags.push({ 'scenario-tags': cell.startsWith('[') ? cell : '[' + cell + ']' });
            }

            const matrix = JSON.stringify({ include: tags });
            fs.writeFileSync('matrix.json', matrix);
            console.log('::set-output name=matrix::' + matrix);
          "

  run-tags:
    needs: extract-tags-and-dispatch
    if: needs.extract-tags-and-dispatch.outputs.matrix != ''
    strategy:
      matrix: ${{ fromJson(needs.extract-tags-and-dispatch.outputs.matrix) }}

    uses: ./.github/workflows/test-runner.yml
    with:
      scenario-tags: ${{ matrix.scenario-tags }}
