name: Execute Tests Based on Excel Tags

on:
  workflow_dispatch:
  push:
    paths:
      - 'tag-priority.xlsx'

jobs:
  run-priority-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm ci
          npm install xlsx --save-dev

      - name: Extract and escape tags from Excel
        id: extract_tags
        run: |
          node -e "
          const fs = require('fs');
          const xlsx = require('xlsx');
          const workbook = xlsx.readFile('./tag-priority.xlsx');
          const sheet = workbook.Sheets[workbook.SheetNames[0]];
          const data = xlsx.utils.sheet_to_json(sheet, { header: 'A', defval: '' });
          
          // Process tags: ensure brackets and escape for regex
          const tags = [];
          for (let i = 1; i <= Object.keys(data).length; i++) {
            const cell = data[i]?.['A']?.trim();
            if (cell) {
              const formattedTag = cell.startsWith('[') ? cell : `[${cell}]`;
              const escapedTag = formattedTag.replace(/\[/g, '\\\\[').replace(/\]/g, '\\\\]');
              tags.push(escapedTag);
            }
          }
          
          // Save to file (raw tags for display, escaped tags for grep)
          fs.writeFileSync('tags_raw.txt', tags.map(t => t.replace(/\\\\/g, '\\')).join('\n'));
          fs.writeFileSync('tags_escaped.txt', tags.join(','));
          console.log('Extracted tags:', tags.join(', '));
          "

      - name: Run tests with properly escaped tags
        run: |
          # Read the escaped tags (ready for grep)
          TAGS=$(cat tags_escaped.txt)
          if [ -z "$TAGS" ]; then
            echo "Error: No tags found in Excel file!"
            exit 1
          fi

          echo "========================================"
          echo "RAW TAGS FROM EXCEL:"
          cat tags_raw.txt
          echo "----------------------------------------"
          echo "ESCAPED TAGS FOR MOCHA:"
          echo "$TAGS"
          echo "========================================"

          # Run tests (tags are already escaped)
          echo "Running: npx wdio run ./wdio.conf.ts --mochaOpts.grep=\"$TAGS\""
          npx wdio run ./wdio.conf.ts --mochaOpts.grep="$TAGS"