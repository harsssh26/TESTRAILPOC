name: Execute Tests Based on Excel Tags

on:
  workflow_dispatch:
  push:
    paths:
      - 'tag-priority.xlsx'

jobs:
  run-priority-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm ci
          npm install xlsx --save-dev

      - name: Abort if tag-priority.xlsx not found
        run: |
          if [ ! -f tag-priority.xlsx ]; then
            echo " tag-priority.xlsx not uploaded â€” exiting"
            exit 1
          fi

      - name: Extract and run tags sequentially
        run: |
          echo "Reading Excel and running each tag one by one..."

          node -e "
            const fs = require('fs');
            const xlsx = require('xlsx');
            const workbook = xlsx.readFile('./tag-priority.xlsx');
            const sheet = workbook.Sheets[workbook.SheetNames[0]];
            const data = xlsx.utils.sheet_to_json(sheet, { header: 1 });

            const tags = [];
            for (let i = 1; i < data.length; i++) {
              const cell = (data[i][0] || '').toString().trim();
              if (!cell) continue;
              const rawTag = cell.startsWith('[') ? cell : '[' + cell + ']';
              const escapedTag = rawTag.replace(/\[/g, '\\\\[').replace(/\]/g, '\\\\]');
              tags.push({ raw: rawTag, escaped: escapedTag });
            }

            if (tags.length === 0) {
              console.error('No valid tags found in Excel!');
              process.exit(1);
            }

            fs.writeFileSync('tag_list.json', JSON.stringify(tags, null, 2));
          "

          TAG_COUNT=$(jq length tag_list.json)
          echo " Found $TAG_COUNT tags"

          for i in $(seq 0 $((TAG_COUNT - 1))); do
            RAW=$(jq -r ".[$i].raw" tag_list.json)
            ESCAPED=$(jq -r ".[$i].escaped" tag_list.json)

            echo "========================================"
            echo " Running tests for tag: $RAW"
            echo "Escaped grep: $ESCAPED"
            echo "========================================"

            npx wdio run ./wdio.conf.ts --mochaOpts.grep="$ESCAPED" | tee output_$i.log

            if grep -q '0 passed' output_$i.log; then
              echo "No tests matched tag: $RAW"
              echo "$RAW" >> missing-tags.txt
            else
              echo " Tag $RAW executed with tests"
            fi
          done

      - name: Cleanup uploaded Excel
        run: |
          git rm -f tag-priority.xlsx || true
          git commit -m "Remove tag-priority.xlsx post execution" || echo "Nothing to commit"
          git push origin || echo "Nothing to push"

      - name: Final cleanup
        run: |
          echo " Cleaning up temp files..."
          rm -f tag-priority.xlsx tag_list.json missing-tags.txt output_*.log
