name: Execute Tests Based on Excel Tags

on:
  workflow_dispatch:
  push:
    paths:
      - 'tag-priority.xlsx'

jobs:
  run-priority-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm ci
          npm install xlsx --save-dev

      - name: Extract and escape tags from Excel
        id: extract_tags
        run: |
          node -e "
            const fs = require('fs');
            const xlsx = require('xlsx');
            const workbook = xlsx.readFile('./tag-priority.xlsx');
            const sheet = workbook.Sheets[workbook.SheetNames[0]];
            const data = xlsx.utils.sheet_to_json(sheet, { header: 1 });

            const tags = [];

            for (let i = 1; i < data.length; i++) {
              const cell = (data[i][0] || '').toString().trim();
              if (!cell) continue;

              const rawTag = cell.startsWith('[') ? cell : '[' + cell + ']';
              const escapedTag = rawTag.replace(/\[/g, '\\\\[').replace(/\]/g, '\\\\]');
              tags.push(escapedTag);
            }

            if (tags.length === 0) {
              console.error('❌ No valid tags found in Excel!');
              process.exit(1);
            }

            fs.writeFileSync('tags_raw.txt', tags.map(t => t.replace(/\\\\/g, '\\')).join('\\n'));
            fs.writeFileSync('tags_escaped.txt', tags.join('|'));
            console.log('✅ Tags extracted and saved.');
          "

      - name: Run tests with tags
        run: |
          TAGS=$(cat tags_escaped.txt)

          echo "========================================"
          echo "RAW TAGS:"
          cat tags_raw.txt
          echo "----------------------------------------"
          echo "ESCAPED GREP STRING:"
          echo "$TAGS"
          echo "========================================"

          echo "Running test cases with tags..."
          npx wdio run ./wdio.conf.ts --mochaOpts.grep="$TAGS"
